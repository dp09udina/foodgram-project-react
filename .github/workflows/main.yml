name: Django-app workflow

on:
  push:
    paths-ignore:
      - '**/README.md'

      
jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install black
        pip install -r ./requirements.txt

    # - name: Test with flake8
    #   run: |
    #     python -m flake8 backend

    # - name: Test with black
    #   run: |
    #     python -m black --check backend

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/feature/add-another-and-fix'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/feature/add-another-and-fix'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd foodgram
            sudo docker compose -f docker-compose.yml pull
            sudo docker compose -f docker-compose.yml down
            sudo docker compose -f docker-compose.yml up -d
            # Выполняет миграции и сбор статики
            sudo docker compose -f docker-compose.yml exec backend python manage.py makemigrations users
            sudo docker compose -f docker-compose.yml exec backend python manage.py makemigrations recipes
            sudo docker compose -f docker-compose.yml exec backend python manage.py migrate
            sudo docker compose -f docker-compose.yml exec backend python manage.py collectstatic
            sudo docker compose -f docker-compose.yml exec backend cp -r /app/static/. /backend_static/
            sudo docker compose -f docker-compose.yml exec backend python manage.py load_data

